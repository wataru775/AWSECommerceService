<?php
    require_once("./libs/ValidUtil.php");
    header("Cache-Control: no-cache, must-revalidate");
    header("Content-type: application/json; charset=utf-8");

    $ISBN     = $_GET["isbn"];

    if( !$ISBN ) {
        printError( " 引数が不正です ( ISBN =" . $ISBN . ") ");
        return ;
    }
    
    if( ($ERROR_MSG=  ValidUtil::validISBN($ISBN)) != TRUE ) {
        printError( " ISBNの値が不正です ( " . $ERROR_MSG . ") ");
        return ;
    }

    require_once("./libs/Book.php");
    require_once("./libs/Author.php");
    require_once("./libs/AmazonUtil.php");

    $request = AmazonUtil::createURL($ISBN);

    $response   = file_get_contents($request);

    if( $response == "FALSE" ) {
        printError( " AWSECommerveServiceへ正しく接続出来ませんでした ");
        return ;
    }

    try{
        $parsed_xml = simplexml_load_string($response);

        if( $parsed_xml == "FALSE" ) {
            printError( " AWSECommerveServiceの回答が解析できませんでした ");
            return ;
        }
        // Get AWS 判定
        if( $parsed_xml->Items->Request->IsValid != "True" ) {
            printError( " AWSECommerveServiceのリクエストが不正です ");
            return ;
        }
    }catch(Exception $e){
        restore_error_handler();  
        echo $e;  
        return ;
    }

    // Amazonからの応答を書籍情報に変換します
    $book = AmazonUtil::castResultToBook($parsed_xml);

    if ( !$book->isbn ) {
        printError( " No book found for ISBN =" . $ISBN . " in Amazon DB  ");
        $book = NULL;
        return;
    }

    echo json_encode(
        array(
            "IsValid" => "TRUE",
            "RESULT" => $book
        ),JSON_UNESCAPED_UNICODE
    );
    $book = NULL;

    /**
     * エラーを出力します
     * @param type $message エラーメッセージ
     */
    function printError($message){
        echo json_encode(
            array(
                "IsValid" => "FALSE",
                "ERROR" => $message
            ),JSON_UNESCAPED_UNICODE
        );
    }                

?>
